{"tagline":"A Description of all projects found in our github repository","body":"# Metlog\r\n\r\nMetlog is a service for applications to capture and inject arbitrary data into a back end storage suitable for out-of-band analytics and processing.\r\n\r\nIt's a client-server system that has almost no impact on your application performances. You can use it to send stats to Logstash for instance, using various transports like UDP and ZeroMQ.\r\n\r\n* [Documentation](http://metlog-py.readthedocs.org)\r\n* [Source](https://github.com/mozilla-services/metlog-py)\r\n\r\n# Cornice\r\n\r\nCornice provides helpers to build & document REST-ish Web Services with Pyramid, with decent default behaviors. It has validation features, and can be integrated with tools like Colander for complex validations.\r\n\r\nCornice can automatically generate Sphinx-based documentation for your APIs.\r\n\r\n* [Documentation](http://cornice.readthedocs.org)\r\n* [Source](https://github.com/mozilla-services/cornice)\r\n\r\n# Circus\r\n\r\nCircus is a process & socket manager. It can be used to monitor and control processes and sockets.\r\n\r\nWith Circus you can control a whole stack from the command-line or a web interface, and have real-time statistics.\r\n\r\n* [Documentation](http://circus.io)\r\n* [Source](https://github.com/mozilla-services/circus)\r\n\r\n# Queuey\r\n\r\nWat? Another message queue?\r\n\r\nGiven the proliferation of message queue's, one could be inclined to believe that inventing more is not the answer. Using an existing solution was attempted multiple times with most every existing message queue product.\r\n\r\nThe others failed (for our use-cases).\r\n\r\nQueuey is meant to handle some unqiue conditions that most other message queue solutions either don't handle, or handle very poorly. Many of them for example are written for queues or pub/sub situations that don't require possibly longer term (multiple days) storage of not just many messages but huge quantities of queues.\r\n\r\n* [Documentation](http://queuey.readthedocs.org)\r\n* [Source](https://github.com/mozilla-services/queuey)\r\n\r\n# Powerhose\r\n\r\nPowerhose turns your CPU-bound tasks into I/O-bound tasks so your Python applications are easier to scale.\r\n\r\nPowerhose is an implementation of the Request-Reply Broker pattern in ZMQ, with some extra features around.\r\n\r\n* [Documentation](http://powerhose.readthedocs.org)\r\n* [Source](https://github.com/mozilla-services/powerhose)\r\n\r\n# Vaurien\r\n\r\nVaurien is a TCP proxy which will let you simulate chaos between your application and a backend server.\r\n\r\n* [Documentation](http://vaurien.readthedocs.org)\r\n* [Source](https://github.com/mozilla-services/vaurien)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Mozilla Services Repositories"}